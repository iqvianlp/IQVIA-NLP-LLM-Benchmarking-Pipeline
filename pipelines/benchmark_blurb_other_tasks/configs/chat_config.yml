# Configuration for prompt template generation with prompt_gen.py.
#
# prompt_gen.py generates one prompt template for each task under `task` and each template under `templates`.
#
# A template signifies the semantic content (or "sections") of a prompt, and a template object contains:
#
#   - name (str): an arbitrary name for the template for reference
#   - sections (list): the order and type of sections in the prompt, each containing:
#       - name (str): the name of the section; must match a property of the task, except for the "example" and "cue"
#           sections, which are populated by the example selection algorithm with the template defined in the
#           task (see below), and actual experiment data at runtime
#       - [optional] header (str): the text to be added as header to this section
#
# A task is a BLURB task and contains the following properties:
#
#   - dataset (str): the name of the BLURB dataset for this task
#   - example (str): the structure of examples and cue; the actual examples will be populated by the example selection
#       algorithm, so this is just the structure. Note that you can add as many "example" sections as you wish in the
#       template, all will use the template defined here
#   - section names (str): the text to go into each section of each template of the same name

templates:
  - name: short, zero-shot
    sections:
      - name: short-instructions
      - name: cue
  - name: short, few-shot (3)
    sections:
      - name: short-instructions
      - name: example
      - name: example
      - name: example
      - name: cue
  - name: long, few-shot (3)
    sections:
      - name: long-instructions
      - name: output-spec
        header: "Output Format:"
      - name: documentation
      - name: example
      - name: example
      - name: example
      - name: cue
  - name: long, zero-shot
    sections:
      - name: long-instructions
      - name: output-spec
        header: "Output Format:"
      - name: documentation
      - name: cue
tasks:
  - dataset: BIOSSES
    example: |  # tip: pipes (|) denote the start of a block in YAML, useful for multi-line strings
        Input: sentence1: {} sentence2: {}
        Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart semantic similarity scoring assistant, specialized in the scoring of semantic similarity between two sentences. Score the semantic similarity between two sentences named sentence1 and sentence2. Your score must be a number from 0 to 4 signifying the similarity between two sentences. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart semantic similarity scoring assistant, specialized in the scoring of semantic similarity between two sentences. Score the semantic similarity between two sentences named sentence1 and sentence2. I will provide you the output format, the definition of the increments on the scoring scale, and the two sentences based on which to answer.
      output-spec: Your answer is the semantic similarity expressed as a continuous number from 0 (no relation) to 4 (equivalent) without any explanation or other characters.
      documentation: |
        Category Definition:
        0, the two sentences are on different topics.
        1, the two sentences are not equivalent, but are on the same topic.
        2, the two sentences are not equivalent, but share some details.
        3, the two sentences are roughly equivalent, but some important information differs/missing.
        4, The two sentences are completely or mostly equivalent, as they mean the same thing.
  - dataset: ChemProt
    example: |
      Input: {}
      Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between a chemical entity and a gene entity. Classify relations between a chemical labeled as @CHEMICAL$ and a gene labeled as @GENE$. The answer must be one of CPR:3, CPR:4, CPR:5, CPR:6, CPR:9, or false. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between a chemical entity and a gene entity. Classify relations between a chemical labeled as @CHEMICAL$ and a gene labeled as @GENE$. I will provide you the output format, the definition of class categories, and the text based on which to answer.
      output-spec: Your answer must be one out of the six types of relations (CPR:3, CPR:4, CPR:5, CPR:6, CPR:9, and false) for the gene and chemical without any explanation or other characters.
      documentation: |
        Category Definition:
        CPR:3, which includes UPREGULATOR, ACTIVATOR, and INDIRECT UPREGULATOR
        CPR:4, which includes DOWNREGULATOR, INHIBITOR ,and INDIRECT DOWNREGULATOR
        CPR:5, which includes AGONIST, AGONIST ACTIVATOR, and AGONIST INHIBITOR
        CPR:6, which includes ANTAGONIST
        CPR:9, which includes SUBSTRATE, PRODUCT OF and SUBSTRATE PRODUCT OF
        false, which indicates no relations
  - dataset: DDI
    example: |
      Input: {}
      Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between drug entities. Classify relations between two drugs labeled as @DRUG$. The answer must be one of DDI-effect, DDI-mechanism, DDI-advise, DDI-false, or DDI-int. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between drug entities. Classify relations between two drugs labeled as @DRUG$. I will provide you the output format, the definition of class categories, and the text based on which to answer.
      output-spec: Your answer must be one out of the five types of relations (DDI-effect, DDI-mechanism, DDI-advise, DDI-false, and DDI-int) for the drugs without any explanation or other characters.
      documentation: |
        Category Definition:
        DDI-mechanism: This type is used to annotate DDIs that are described by their PK mechanism (e.g. Grepafloxacin may inhibit the metabolism of theobromine)
        DDI-effect: This type is used to annotate DDIs describing an effect (e.g. In uninfected volunteers, 46% developed rash while receiving SUSTIVA and clarithromycin) or a PD mechanism (e.g. Chlorthalidone may potentiate the action of other antihypertensive drugs)
        DDI-advise: This type is used when a recommendation or advice regarding a drug interaction is given (e.g. UROXATRAL should not be used in combination with other alpha-blockers)
        DDI-int: This type is used when a DDI appears in the text without providing any additional information (e.g. The interaction of omeprazole and ketoconazole has been established)
        DDI-false, This type is used when no DDI relation appears
  - dataset: GAD
    example: |
      Input: {}
      Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between a disease entity and a gene entity. Classify relations between a disease labeled as @DISEASE$ and a gene labeled as @GENE$. Answer with 1 if there is a relation or 0 if there is not. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart relation extraction assistant, specialized in relation extraction between a disease entity and a gene entity. Classify relations between a disease labeled as @DISEASE$ and a gene labeled as @GENE$. I will provide you the output format, the definition of class categories, and the text based on which to answer.
      output-spec: Answer with 1 or 0. Do not provide any explanation or other characters.
      documentation: |
        Category Definition:
        0: there is no relation between the disease entity and the gene entity
        1: there is a relation between the disease entity and the gene entity
  - dataset: HoC
    example: |
      Abstract: {}
      Output: {}
    sections:
      short-instructions: |
        You are an expert in the biomedical domain. You are a smart document classification assistant, specialized in biomedical document classification. Classify the provided abstract. If the abstract does not belong to any of the hallmarks of cancer, answer with EMPTY_LIST. Otherwise, answer with a comma-separated list consisting of one or multiple of the following hallmarks of cancer:
        activating invasion and metastasis
        sustaining proliferative signaling
        resisting cell death
        cellular energetics
        genomic instability and mutation
        evading growth suppressors
        inducing angiogenesis
        enabling replicative immortality
        avoiding immune destruction
        tumor promoting inflammation
      long-instructions: You are an expert in the biomedical domain. You are a smart document classification assistant, specialized in biomedical document classification. I will provide you the output format, the definition of class categories, and the abstract to classify.
      output-spec: |
        Answer with a comma-separated list consisting of one or multiple hallmarks of cancer.
        Include the class in the list if the abstract is related to that class.
        Please note one abstract can be related to multiple classes.
        If the abstract does not belong to any of the hallmarks of cancer, answer with EMPTY_LIST
      documentation: |
        Category Definition:
        There are 10 cancer hallmarks you will need to decide whether the article is related to, including:
        activating invasion and metastasis
        sustaining proliferative signaling
        resisting cell death
        cellular energetics
        genomic instability and mutation
        evading growth suppressors
        inducing angiogenesis
        enabling replicative immortality
        avoiding immune destruction
        tumor promoting inflammation
  - dataset: PubmedQA
    example: |
      Input: Question: {} Abstract: {}
      Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart question answering assistant, specialized in answering biomedical questions. Answer based on the provided abstract. Only answer with yes, no, or maybe. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart question answering assistant, specialized in answering biomedical questions. I will provide you the output format, the question to answer, and the abstract based on which to answer the question.
      output-spec: |
        Your answer must be one word: yes, no, or maybe. Do not provide any explanation or other characters.
  - dataset: BioASQ
    example: |
      Input: {}
      Output: {}
    sections:
      short-instructions: You are an expert in the biomedical domain. You are a smart question answering assistant, specialized in answering biomedical questions. Only answer with yes, or no. Do not provide any explanation or other characters.
      long-instructions: You are an expert in the biomedical domain. You are a smart question answering assistant, specialized in answering biomedical questions. I will provide you the output format, and the question to answer.
      output-spec: |
        Your answer must be one word: yes, or no. Do not provide any explanation or other characters.
